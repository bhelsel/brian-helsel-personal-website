{
  "hash": "4cb4cf5a11e1f76ff7edc8ec316f5b5b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Correlation Matrix\nauthor: Brian Helsel\ndate: '2022-07-27'\nslug: correlation-matrix\ncategories: [Data Visualization]\n---\n\n\n\n## Introduction\n\nCorrelations are one of the simplest ways to look at the association between 2 variables. However, I often find myself running correlations on many variables when exploring a new data set. I was tired of writing `cor(x, y)` and I wanted a quick way to visualize correlations, so I created a correlation matrix using `ggplot2`.\n\n## Data\n\nLet's explore the mtcars data set and create a correlation matrix.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(magrittr)\nlibrary(ggplot2)\nlibrary(reactable)\n\ndata(\"mtcars\")\n\nreactable(\n  mtcars, \n  defaultPageSize = 5,\n  columns = list(\n    .rownames = colDef(\n      name = \"model\", \n      sortable = TRUE, \n      minWidth = 200)\n    )\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"reactable html-widget html-fill-item\" id=\"htmlwidget-cbaa70731369b59d8c17\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-cbaa70731369b59d8c17\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\".rownames\":[\"Mazda RX4\",\"Mazda RX4 Wag\",\"Datsun 710\",\"Hornet 4 Drive\",\"Hornet Sportabout\",\"Valiant\",\"Duster 360\",\"Merc 240D\",\"Merc 230\",\"Merc 280\",\"Merc 280C\",\"Merc 450SE\",\"Merc 450SL\",\"Merc 450SLC\",\"Cadillac Fleetwood\",\"Lincoln Continental\",\"Chrysler Imperial\",\"Fiat 128\",\"Honda Civic\",\"Toyota Corolla\",\"Toyota Corona\",\"Dodge Challenger\",\"AMC Javelin\",\"Camaro Z28\",\"Pontiac Firebird\",\"Fiat X1-9\",\"Porsche 914-2\",\"Lotus Europa\",\"Ford Pantera L\",\"Ferrari Dino\",\"Maserati Bora\",\"Volvo 142E\"],\"mpg\":[21,21,22.8,21.4,18.7,18.1,14.3,24.4,22.8,19.2,17.8,16.4,17.3,15.2,10.4,10.4,14.7,32.4,30.4,33.9,21.5,15.5,15.2,13.3,19.2,27.3,26,30.4,15.8,19.7,15,21.4],\"cyl\":[6,6,4,6,8,6,8,4,4,6,6,8,8,8,8,8,8,4,4,4,4,8,8,8,8,4,4,4,8,6,8,4],\"disp\":[160,160,108,258,360,225,360,146.7,140.8,167.6,167.6,275.8,275.8,275.8,472,460,440,78.7,75.7,71.1,120.1,318,304,350,400,79,120.3,95.1,351,145,301,121],\"hp\":[110,110,93,110,175,105,245,62,95,123,123,180,180,180,205,215,230,66,52,65,97,150,150,245,175,66,91,113,264,175,335,109],\"drat\":[3.9,3.9,3.85,3.08,3.15,2.76,3.21,3.69,3.92,3.92,3.92,3.07,3.07,3.07,2.93,3,3.23,4.08,4.93,4.22,3.7,2.76,3.15,3.73,3.08,4.08,4.43,3.77,4.22,3.62,3.54,4.11],\"wt\":[2.62,2.875,2.32,3.215,3.44,3.46,3.57,3.19,3.15,3.44,3.44,4.07,3.73,3.78,5.25,5.424,5.345,2.2,1.615,1.835,2.465,3.52,3.435,3.84,3.845,1.935,2.14,1.513,3.17,2.77,3.57,2.78],\"qsec\":[16.46,17.02,18.61,19.44,17.02,20.22,15.84,20,22.9,18.3,18.9,17.4,17.6,18,17.98,17.82,17.42,19.47,18.52,19.9,20.01,16.87,17.3,15.41,17.05,18.9,16.7,16.9,14.5,15.5,14.6,18.6],\"vs\":[0,0,1,1,0,1,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,0,1,0,0,0,1],\"am\":[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1],\"gear\":[4,4,4,3,3,3,3,4,4,4,4,3,3,3,3,3,3,4,4,4,3,3,3,3,3,4,5,5,5,5,5,4],\"carb\":[4,4,1,1,2,1,4,2,2,4,4,3,3,3,4,4,4,1,2,1,1,2,2,4,2,1,2,2,4,6,8,2]},\"columns\":[{\"id\":\".rownames\",\"name\":\"model\",\"type\":\"character\",\"sortable\":true,\"filterable\":false,\"minWidth\":200,\"rowHeader\":true},{\"id\":\"mpg\",\"name\":\"mpg\",\"type\":\"numeric\"},{\"id\":\"cyl\",\"name\":\"cyl\",\"type\":\"numeric\"},{\"id\":\"disp\",\"name\":\"disp\",\"type\":\"numeric\"},{\"id\":\"hp\",\"name\":\"hp\",\"type\":\"numeric\"},{\"id\":\"drat\",\"name\":\"drat\",\"type\":\"numeric\"},{\"id\":\"wt\",\"name\":\"wt\",\"type\":\"numeric\"},{\"id\":\"qsec\",\"name\":\"qsec\",\"type\":\"numeric\"},{\"id\":\"vs\",\"name\":\"vs\",\"type\":\"numeric\"},{\"id\":\"am\",\"name\":\"am\",\"type\":\"numeric\"},{\"id\":\"gear\",\"name\":\"gear\",\"type\":\"numeric\"},{\"id\":\"carb\",\"name\":\"carb\",\"type\":\"numeric\"}],\"defaultPageSize\":5,\"dataKey\":\"d271342d5b69630fd662d605071cced4\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n<br>\n<center>\n<hr>\nIn the mtcars data set above, there are **11 columns** and **32 rows** of data. \n\nThe columns include: **mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb**. \n\nHere is a description of all the variables.\n\n| Variable | Description |\n| :------: | :----------: |\n| mpg | Mile per gallon |\n| cyl | Number of Cylinders |\n| disp | Displacement |\n| hp | Gross Horsepower |\n| drat | Rear Axle Ratio |\n| wt | Weight (lb/1000) |\n| qsec | Quarter Mile Time |\n| vs | Straight Engine |\n| am | Manual Transmission |\n| gear | Number of Forward Gears |\n| carb | Number of Carburetors | \n</center>\n\n## The Final Product\n\nThis is the correlation matrix that we will be creating and I've added the code to a function at the end of this post. For those interested in learning, I've provided a description of the key steps in getting the correlations and processing the data before creating the correlation matrix. Otherwise, feel free to jump ahead to the bottom of the post to see a link to the `cor_matrix` function. \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=768}\n:::\n:::\n\n\n\n## Correlations\n\nTo create the correlation matrix, we will use the `rcorr` function from the `Hmisc` package. First, we need to take the mtcars data set and convert it to a matrix before calling the `Hmisc::rcorr` function. We will use spearman correlations for this example, but the type argument can also be switched to pearson.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvars <- c(\"mpg\", \"cyl\", \"disp\", \"hp\", \"drat\", \n          \"wt\", \"qsec\", \"vs\", \"am\", \"gear\", \"carb\")\n\ncorres <- \n  mtcars %>%\n  select(all_of(vars)) %>%\n  as.matrix() %>%\n  Hmisc::rcorr(., type = \"spearman\")\n```\n:::\n\n\n\nWhen we run the code above, you can see that `Hmisc::rcorr` returns a list. From this list, we can extract the correlation coefficients and their corresponding p-values. You can extract this list to a matrix using the `extract2` function from the `magrittr` package or an alternative method if you prefer. We can also round each value to 2 digits to make the output cleaner.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.matrix.r <- \n  corres %>%\n  extract2(\"r\") %>%\n  round(., 2)\n\ncor.matrix.r\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\nmpg   1.00 -0.91 -0.91 -0.89  0.65 -0.89  0.47  0.71  0.56  0.54 -0.66\ncyl  -0.91  1.00  0.93  0.90 -0.68  0.86 -0.57 -0.81 -0.52 -0.56  0.58\ndisp -0.91  0.93  1.00  0.85 -0.68  0.90 -0.46 -0.72 -0.62 -0.59  0.54\nhp   -0.89  0.90  0.85  1.00 -0.52  0.77 -0.67 -0.75 -0.36 -0.33  0.73\ndrat  0.65 -0.68 -0.68 -0.52  1.00 -0.75  0.09  0.45  0.69  0.74 -0.13\nwt   -0.89  0.86  0.90  0.77 -0.75  1.00 -0.23 -0.59 -0.74 -0.68  0.50\nqsec  0.47 -0.57 -0.46 -0.67  0.09 -0.23  1.00  0.79 -0.20 -0.15 -0.66\nvs    0.71 -0.81 -0.72 -0.75  0.45 -0.59  0.79  1.00  0.17  0.28 -0.63\nam    0.56 -0.52 -0.62 -0.36  0.69 -0.74 -0.20  0.17  1.00  0.81 -0.06\ngear  0.54 -0.56 -0.59 -0.33  0.74 -0.68 -0.15  0.28  0.81  1.00  0.11\ncarb -0.66  0.58  0.54  0.73 -0.13  0.50 -0.66 -0.63 -0.06  0.11  1.00\n```\n\n\n:::\n\n```{.r .cell-code}\ncor.matrix.p <- \n  corres %>%\n  extract2(\"P\") %>%\n  round(., 2)\n\ncor.matrix.p\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      mpg cyl disp   hp drat   wt qsec   vs   am gear carb\nmpg    NA   0 0.00 0.00 0.00 0.00 0.01 0.00 0.00 0.00 0.00\ncyl  0.00  NA 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00\ndisp 0.00   0   NA 0.00 0.00 0.00 0.01 0.00 0.00 0.00 0.00\nhp   0.00   0 0.00   NA 0.00 0.00 0.00 0.00 0.04 0.06 0.00\ndrat 0.00   0 0.00 0.00   NA 0.00 0.62 0.01 0.00 0.00 0.49\nwt   0.00   0 0.00 0.00 0.00   NA 0.21 0.00 0.00 0.00 0.00\nqsec 0.01   0 0.01 0.00 0.62 0.21   NA 0.00 0.26 0.42 0.00\nvs   0.00   0 0.00 0.00 0.01 0.00 0.00   NA 0.36 0.12 0.00\nam   0.00   0 0.00 0.04 0.00 0.00 0.26 0.36   NA 0.00 0.73\ngear 0.00   0 0.00 0.06 0.00 0.00 0.42 0.12 0.00   NA 0.53\ncarb 0.00   0 0.00 0.00 0.49 0.00 0.00 0.00 0.73 0.53   NA\n```\n\n\n:::\n:::\n\n\n\n## Data Processing\n\nNow you have the correlations and the p-values for all the variables. However, as you can see from the correlation matrix, you have repeat values for each variable with diagonal 1.000 values for correlations between the same variables. When viewing the correlation matrix, it is not helpful to see these repeat values so we can set them to missing and exclude them from the visualization using the `lower.tri` function from `base` R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.matrix.r[lower.tri(cor.matrix.r)] <- NA\ncor.matrix.r\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\nmpg    1 -0.91 -0.91 -0.89  0.65 -0.89  0.47  0.71  0.56  0.54 -0.66\ncyl   NA  1.00  0.93  0.90 -0.68  0.86 -0.57 -0.81 -0.52 -0.56  0.58\ndisp  NA    NA  1.00  0.85 -0.68  0.90 -0.46 -0.72 -0.62 -0.59  0.54\nhp    NA    NA    NA  1.00 -0.52  0.77 -0.67 -0.75 -0.36 -0.33  0.73\ndrat  NA    NA    NA    NA  1.00 -0.75  0.09  0.45  0.69  0.74 -0.13\nwt    NA    NA    NA    NA    NA  1.00 -0.23 -0.59 -0.74 -0.68  0.50\nqsec  NA    NA    NA    NA    NA    NA  1.00  0.79 -0.20 -0.15 -0.66\nvs    NA    NA    NA    NA    NA    NA    NA  1.00  0.17  0.28 -0.63\nam    NA    NA    NA    NA    NA    NA    NA    NA  1.00  0.81 -0.06\ngear  NA    NA    NA    NA    NA    NA    NA    NA    NA  1.00  0.11\ncarb  NA    NA    NA    NA    NA    NA    NA    NA    NA    NA  1.00\n```\n\n\n:::\n\n```{.r .cell-code}\ncor.matrix.p[lower.tri(cor.matrix.p)] <- NA\ncor.matrix.p\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     mpg cyl disp hp drat wt qsec   vs   am gear carb\nmpg   NA   0    0  0    0  0 0.01 0.00 0.00 0.00 0.00\ncyl   NA  NA    0  0    0  0 0.00 0.00 0.00 0.00 0.00\ndisp  NA  NA   NA  0    0  0 0.01 0.00 0.00 0.00 0.00\nhp    NA  NA   NA NA    0  0 0.00 0.00 0.04 0.06 0.00\ndrat  NA  NA   NA NA   NA  0 0.62 0.01 0.00 0.00 0.49\nwt    NA  NA   NA NA   NA NA 0.21 0.00 0.00 0.00 0.00\nqsec  NA  NA   NA NA   NA NA   NA 0.00 0.26 0.42 0.00\nvs    NA  NA   NA NA   NA NA   NA   NA 0.36 0.12 0.00\nam    NA  NA   NA NA   NA NA   NA   NA   NA 0.00 0.73\ngear  NA  NA   NA NA   NA NA   NA   NA   NA   NA 0.53\ncarb  NA  NA   NA NA   NA NA   NA   NA   NA   NA   NA\n```\n\n\n:::\n:::\n\n\n\nIt is almost time to visualize the data. We have 2 final steps to complete the data processing. First, let's rename the variables to something more meaningful. This way when others see them on the plot, it will be easier to understand. We will need to rename the columns with `colnames` and rows with `rownames`. We can also reshape the data using `melt` from the `reshape2` package. Adding the `na.rm = TRUE` argument removes all the duplicate correlation values that were set to missing earlier. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar.names <- c(\"Miles/Gallon\", \n               \"Number of Cylinders\", \n               \"Displacement\", \n               \"Gross Horsepower\",\n               \"Rear Axle Ratio\", \n               \"Weight (lb/1000)\", \n               \"Quarter Mile Time\", \n               \"Straight Engine\",\n               \"Manual Transmission\", \n               \"Number of Forward Gears\", \n               \"Number of Carburetors\")\n\ncolnames(cor.matrix.r) <- c(var.names)\nrownames(cor.matrix.r) <- c(var.names)\ncolnames(cor.matrix.p) <- c(var.names)\nrownames(cor.matrix.p) <- c(var.names)\n\ncor.matrix.r <- \n  cor.matrix.r %>% \n  reshape2::melt(., na.rm = TRUE)\n\nhead(cor.matrix.r, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  Var1                Var2 value\n1         Miles/Gallon        Miles/Gallon  1.00\n12        Miles/Gallon Number of Cylinders -0.91\n13 Number of Cylinders Number of Cylinders  1.00\n23        Miles/Gallon        Displacement -0.91\n24 Number of Cylinders        Displacement  0.93\n25        Displacement        Displacement  1.00\n34        Miles/Gallon    Gross Horsepower -0.89\n35 Number of Cylinders    Gross Horsepower  0.90\n36        Displacement    Gross Horsepower  0.85\n37    Gross Horsepower    Gross Horsepower  1.00\n```\n\n\n:::\n:::\n\n\n\n## The Plot\n\nNow all we need to do is to write the code to visualize the data. Here I will use `geom_tile` which creates a box for each value and fills it with color based on the value variable from the data set. We can use `scale_fill_gradient2` function to set the low, mid, and high colors for the correlation plot. The low and high values would correspond to -1 and 1, respectively. We can also rotate the x-axis labels by 45 degrees to make them easier to read and add the correlation values to the plot using `geom_text`. All of the other lines of code are to adjust the theme of the plot and can be changed to your preferences.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cor.matrix.r, aes(x = Var2, y = Var1, fill=value)) +\n  geom_tile(color=\"black\") +\n  scale_fill_gradient2(low=\"#B2BDED\", mid=\"#ffffff\", high=\"#C6E0B4\",\n                       midpoint=0, limit=c(-1,1), space=\"Lab\", \n                       name=\"Spearman\\nCorrleation\") +\n  theme_minimal() +\n  coord_fixed() +\n  geom_text(aes(Var2, Var1, label = value, fontface = \"bold\"), \n            color = \"black\", size = 4) +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, \n                                   size = 12, hjust = 1, \n                                   face = \"bold\"),\n        axis.text.y = element_text(size = 12, face = \"bold\"),\n        axis.title.x = element_blank(), \n        axis.title.y = element_blank(), \n        panel.grid.major = element_blank(),\n        panel.border = element_blank(), \n        panel.background = element_blank(), \n        axis.ticks = element_blank(),\n        legend.justification = c(1, 0), \n        legend.position = c(0.5, 0.7), \n        legend.direction = \"horizontal\") +\n  guides(fill = guide_colorbar(barwidth = 7, barheight = 1, \n                               title.position = \"top\", \n                               title.hjust = 0.5))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot part 1-1.png){width=768}\n:::\n:::\n\n\n\nYou can also add the p-values to a Table. Here I only display p-values < 0.05 if `Var1` is *Miles/Gallon*, but you could display all p-values or adjust the filters as needed.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.matrix.p %>%\n  reshape2::melt(., na.rm = TRUE) %>%\n  filter(value < 0.05 & Var1 == \"Miles/Gallon\") %>%\n  mutate(value = ifelse(value < 0.001, \"< 0.001\", value)) %>%\n  gt::gt() %>%\n  gtExtras::gt_theme_538()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"aiyrbgvglt\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>@import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Cairo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n#aiyrbgvglt table {\n  font-family: Cairo, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#aiyrbgvglt thead, #aiyrbgvglt tbody, #aiyrbgvglt tfoot, #aiyrbgvglt tr, #aiyrbgvglt td, #aiyrbgvglt th {\n  border-style: none;\n}\n\n#aiyrbgvglt p {\n  margin: 0;\n  padding: 0;\n}\n\n#aiyrbgvglt .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: 400;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: none;\n  border-top-width: 3px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#aiyrbgvglt .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#aiyrbgvglt .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#aiyrbgvglt .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#aiyrbgvglt .gt_heading {\n  background-color: #FFFFFF;\n  text-align: left;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#aiyrbgvglt .gt_bottom_border {\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#aiyrbgvglt .gt_col_headings {\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#aiyrbgvglt .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#aiyrbgvglt .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#aiyrbgvglt .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#aiyrbgvglt .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#aiyrbgvglt .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #000000;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#aiyrbgvglt .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#aiyrbgvglt .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#aiyrbgvglt .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #FFFFFF;\n  vertical-align: middle;\n}\n\n#aiyrbgvglt .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#aiyrbgvglt .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#aiyrbgvglt .gt_row {\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#aiyrbgvglt .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 0px;\n  border-right-color: #FFFFFF;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aiyrbgvglt .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#aiyrbgvglt .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#aiyrbgvglt .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#aiyrbgvglt .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aiyrbgvglt .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#aiyrbgvglt .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#aiyrbgvglt .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#aiyrbgvglt .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aiyrbgvglt .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#aiyrbgvglt .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#aiyrbgvglt .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#aiyrbgvglt .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#aiyrbgvglt .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#aiyrbgvglt .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aiyrbgvglt .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#aiyrbgvglt .gt_sourcenote {\n  font-size: 12px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aiyrbgvglt .gt_left {\n  text-align: left;\n}\n\n#aiyrbgvglt .gt_center {\n  text-align: center;\n}\n\n#aiyrbgvglt .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#aiyrbgvglt .gt_font_normal {\n  font-weight: normal;\n}\n\n#aiyrbgvglt .gt_font_bold {\n  font-weight: bold;\n}\n\n#aiyrbgvglt .gt_font_italic {\n  font-style: italic;\n}\n\n#aiyrbgvglt .gt_super {\n  font-size: 65%;\n}\n\n#aiyrbgvglt .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#aiyrbgvglt .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#aiyrbgvglt .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#aiyrbgvglt .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#aiyrbgvglt .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#aiyrbgvglt .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#aiyrbgvglt .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#aiyrbgvglt .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#aiyrbgvglt div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n\ntbody tr:last-child {\n  border-bottom: 2px solid #ffffff00;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"border-top-width: 0px; border-top-style: solid; border-top-color: black; font-family: Chivo; font-size: 14px; vertical-align: bottom; font-weight: 200; text-transform: uppercase;\" scope=\"col\" id=\"Var1\">Var1</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"border-top-width: 0px; border-top-style: solid; border-top-color: black; font-family: Chivo; font-size: 14px; vertical-align: bottom; font-weight: 200; text-transform: uppercase;\" scope=\"col\" id=\"Var2\">Var2</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"border-top-width: 0px; border-top-style: solid; border-top-color: black; font-family: Chivo; font-size: 14px; vertical-align: bottom; font-weight: 200; text-transform: uppercase;\" scope=\"col\" id=\"value\">value</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Var1\" class=\"gt_row gt_center\">Miles/Gallon</td>\n<td headers=\"Var2\" class=\"gt_row gt_center\">Number of Cylinders</td>\n<td headers=\"value\" class=\"gt_row gt_left\">&lt; 0.001</td></tr>\n    <tr><td headers=\"Var1\" class=\"gt_row gt_center\">Miles/Gallon</td>\n<td headers=\"Var2\" class=\"gt_row gt_center\">Displacement</td>\n<td headers=\"value\" class=\"gt_row gt_left\">&lt; 0.001</td></tr>\n    <tr><td headers=\"Var1\" class=\"gt_row gt_center\">Miles/Gallon</td>\n<td headers=\"Var2\" class=\"gt_row gt_center\">Gross Horsepower</td>\n<td headers=\"value\" class=\"gt_row gt_left\">&lt; 0.001</td></tr>\n    <tr><td headers=\"Var1\" class=\"gt_row gt_center\">Miles/Gallon</td>\n<td headers=\"Var2\" class=\"gt_row gt_center\">Rear Axle Ratio</td>\n<td headers=\"value\" class=\"gt_row gt_left\">&lt; 0.001</td></tr>\n    <tr><td headers=\"Var1\" class=\"gt_row gt_center\">Miles/Gallon</td>\n<td headers=\"Var2\" class=\"gt_row gt_center\">Weight (lb/1000)</td>\n<td headers=\"value\" class=\"gt_row gt_left\">&lt; 0.001</td></tr>\n    <tr><td headers=\"Var1\" class=\"gt_row gt_center\">Miles/Gallon</td>\n<td headers=\"Var2\" class=\"gt_row gt_center\">Quarter Mile Time</td>\n<td headers=\"value\" class=\"gt_row gt_left\">0.01</td></tr>\n    <tr><td headers=\"Var1\" class=\"gt_row gt_center\">Miles/Gallon</td>\n<td headers=\"Var2\" class=\"gt_row gt_center\">Straight Engine</td>\n<td headers=\"value\" class=\"gt_row gt_left\">&lt; 0.001</td></tr>\n    <tr><td headers=\"Var1\" class=\"gt_row gt_center\">Miles/Gallon</td>\n<td headers=\"Var2\" class=\"gt_row gt_center\">Manual Transmission</td>\n<td headers=\"value\" class=\"gt_row gt_left\">&lt; 0.001</td></tr>\n    <tr><td headers=\"Var1\" class=\"gt_row gt_center\">Miles/Gallon</td>\n<td headers=\"Var2\" class=\"gt_row gt_center\">Number of Forward Gears</td>\n<td headers=\"value\" class=\"gt_row gt_left\">&lt; 0.001</td></tr>\n    <tr><td headers=\"Var1\" class=\"gt_row gt_center\">Miles/Gallon</td>\n<td headers=\"Var2\" class=\"gt_row gt_center\">Number of Carburetors</td>\n<td headers=\"value\" class=\"gt_row gt_left\">&lt; 0.001</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n## The Function\n\nIt can be all combined into a single function. You can view the function in the <a href=\"https://github.com/bhelsel/bhelselR/blob/master/R/visualizations.R\">visualization.R</a> file my personal GitHub page or download it into your RStudio by typing the following code into your console.\n\n`devtools::install_github(\"bhelsel/bhelselR\")` \n\nThat's it! Fairly simple and straightforward. There are also a lot of different ways that you could modify this function to personalize it for your analyses. Let me know if you use this function or a similar one in the comments below!",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/core-js-2.5.3/shim.min.js\"></script>\n<script src=\"../../site_libs/react-18.2.0/react.min.js\"></script>\n<script src=\"../../site_libs/react-18.2.0/react-dom.min.js\"></script>\n<script src=\"../../site_libs/reactwidget-2.0.0/react-tools.js\"></script>\n<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/reactable-0.4.4/reactable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/reactable-binding-0.4.4/reactable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}